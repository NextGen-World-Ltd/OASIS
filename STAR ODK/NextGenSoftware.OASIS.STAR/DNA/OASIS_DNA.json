{
  "OASIS": {
    "Terms": "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n\n",
    "OASISAPIURL": "https://api.oasisweb4.com",
    //"CurrentStagingVersion": "v3.1.0",
    //"CurrentLiveVersion": "v3.1.0",
    //"OASISVersion": "LIVE",
    "Logging": {
      "LoggingFramework": "Default", //Can currently be 'Default' or 'NLog'. Soon will allow a comma demimited list to be specified here.

      //If the LoggingFramework is set to anything other than 'Default' then you can set this flag to true to also log to the Default LogProvider below.
      "AlsoUseDefaultLogProvider": "false",

      //These only apply to the Default LogProvider/Framework
      "FileLoggingMode": "WarningsErrorsInfoAndDebug",
      "ConsoleLoggingMode": "WarningsErrorsAndInfo",
      "LogToConsole": "true",
      "ShowColouredLogs": "true",
      "DebugColour": "White",
      "InfoColour": "Green",
      "WarningColour": "Yellow",
      "ErrorColour": "Red",
      "LogToFile": "true",
      "LogPath": "C:\\Users\\USER\\AppData\\Roaming\\NextGenSoftware\\OASIS",
      "LogFileName": "C:\\Users\\USER\\AppData\\Roaming\\NextGenSoftware\\OASIS",
      "MaxLogFileSize": "1000000",
      "NumberOfRetriesToLogToFile": "3",
      "RetryLoggingToFileEverySeconds": "1",
      "InsertExtraNewLineAfterLogMessage": "false",
      "IndentLogMessagesBy": "1"
    },
    "ErrorHandling": {
      "ShowStackTrace": "false",
      "ThrowExceptionsOnErrors": "false", //This should ONLY be used in DEBUG/DEV mode. Even if this is true it will only throw an exception if ErrorHandlingBehaviour is set to 'AlwaysThrowExceptionOnError' or if it is 'OnlyThrowExceptionIfNoErrorHandlerSubscribedToOnErrorEvent' and OnError has not been subscribed to.  
      "ThrowExceptionsOnWarnings": "false", //This should ONLY be used in DEBUG/DEV mode. Even if this is true it will only throw an exception if WarningHandlingBehaviour is set to 'AlwaysThrowExceptionOnWarning' or if it is 'OnlyThrowExceptionIfNoWarningHandlerSubscribedToOnWarningEvent' and OnWarning has not been subscribed to.  
      "LogAllErrors": "true",
      "LogAllWarnings": "true",
      "ErrorHandlingBehaviour": "OnlyThrowExceptionIfNoErrorHandlerSubscribedToOnErrorEvent",
      "WarningHandlingBehaviour": "OnlyThrowExceptionIfNoWarningHandlerSubscribedToOnWarningEvent"
    },
    "Security": {
      "HideVerificationToken": "true",
      "HideRefreshTokens": "true",
      "SecretKey": "",
      "AvatarPassword": {
        "BCryptEncryptionEnabled": "true",
        "Rijndael256EncryptionEnabled": "true",
        "Rijndael256Key": "",
        "QuantumEncryptionEnabled": "true"
      },
      "OASISProviderPrivateKeys": {
        "BCryptEncryptionEnabled": "true",
        "Rijndael256EncryptionEnabled": "true",
        "Rijndael256Key": "",
        "QuantumEncryptionEnabled": "true"
      }
    },
    "Email": {
      "EmailFrom": "",
      "SmtpHost": "",
      // "SmtpPort": 587,
      "SmtpPort": 0,
      "SmtpUser": "",
      "SmtpPass": "",
      "DisableAllEmails": "true", //This overrides the SendVerificationEmail setting below. MAKE SURE THIS IS FALSE FOR LIVE!
      "SendVerificationEmail": "true",
      "OASISWebSiteURL": "https://oasisplatform.world/#"
    },
    "StorageProviders": {
        "AutoReplicationEnabled": "false",
        "AutoFailOverEnabled": "true",
        //"AutoFailOverEnabledForAvatarLogin": "true",
        //"AutoFailOverEnabledForCheckIfEmailAlreadyInUse": "true",
        //"AutoFailOverEnabledForCheckIfUsernameAlreadyInUse": "true",
        "AutoLoadBalanceEnabled": "true",
        "AutoLoadBalanceReadPollIntervalMins": "10",
        "AutoLoadBalanceWritePollIntervalMins": "10",
        "ActivateProviderTimeOutSeconds": "10",
        "DeactivateProviderTimeOutSeconds": "30",
        "ProviderMethodCallTimeOutSeconds": "99",
        "AutoReplicationProviders": "MongoDBOASIS, ArbitrumOASIS, PolygonOASIS, RootstockOASIS, LocalFileOASIS, SQLLiteDBOASIS, Neo4jOASIS, IPFSOASIS, HoloOASIS, SolanaOASIS, TelosOASIS, EOSIOOASIS, EthereumOASIS, ThreeFoldOASIS",
        "AutoFailOverProviders": "MongoDBOASIS, ArbitrumOASIS, LocalFileOASIS, SQLLiteDBOASIS, Neo4jOASIS, IPFSOASIS, HoloOASIS, SolanaOASIS, TelosOASIS, EOSIOOASIS, EthereumOASIS, ThreeFoldOASIS",
        "AutoFailOverProvidersForAvatarLogin": "MongoDBOASIS",
        "AutoFailOverProvidersForCheckIfEmailAlreadyInUse": "MongoDBOASIS",
        "AutoFailOverProvidersForCheckIfUsernameAlreadyInUse": "MongoDBOASIS",
        "AutoFailOverProvidersForCheckIfOASISSystemAccountExists": "MongoDBOASIS",
        "AutoLoadBalanceProviders": "MongoDBOASIS, ArbitrumOASIS, PolygonOASIS, RootstockOASIS, LocalFileOASIS, SQLLiteDBOASIS, Neo4jOASIS, IPFSOASIS, HoloOASIS, SolanaOASIS, TelosOASIS, EOSIOOASIS, EthereumOASIS, ThreeFoldOASIS",

        //Can be:
        //Cold (will only register and activate (connect, etc) each provider when you fist make a call into it - fastest initial OASIS boot but slowest initial call into each OASIS Provider as it is registered and activated. Has the smallest initial memory footprint.
        //Warm (will register each provider but not activate it - average boot and slight delay intially calling into an OASIS Provider as it activates for the first time).
        //Hot (will register and activate each provider (connect, etc) - slower inital boot of OASIS but subsequent calls to OASIS Providers will be faster, also has slightly higher initial memory footprint).
        "OASISProviderBootType": "Warm",

        "HoloOASIS": {
            "HoloNetworkURI": "https://holo.host/",
            "LocalNodeURI": "ws://localhost:8888",
            "UseLocalNode": "true",
            "UseHoloNetwork": "true",
            "HoloNETORMUseReflection": false
        },
        "MongoDBOASIS": {
            "ConnectionString": "mongodb://localhost:27017",
            "DBName": "OASISAPI_DEV"
            //"DBName": "OASISAPI_TEST"
            //"DBName": "OASISAPI_LIVE"
        },
        "SQLLiteDBOASIS": {
            "ConnectionString": "Data Source=OASISSQLLiteDB.db"
        },
        "EOSIOOASIS": {
            "ConnectionString": "http://localhost:8888",
            "AccountName": "oasis",
            "AccountPrivateKey": "",
            "ChainId": ""
        },
        "TelosOASIS": {
            "ConnectionString": "https://node.hypha.earth"
        },
        "SEEDSOASIS": {
            "ConnectionString": "https://node.hypha.earth"
        },
        "ThreeFoldOASIS": {
            "ConnectionString": ""
        },
        "EthereumOASIS": {
            "ConnectionString": "http://testchain.nethereum.com:8545",
            "ChainPrivateKey": "",
            "ChainId": 444444444500,
            "ContractAddress": ""
        },
        "Neo4JOASIS": {
            "ConnectionString": "bolt://localhost:7687",
            "Username": "neo4j",
            "Password": ""
        },
        "IPFSOASIS": {
            "ConnectionString": "http://localhost:5001",
            "LookUpIPFSAddress": ""
        },
        "SolanaOASIS": {
            "WalletMnemonicWords": "",
            "ConnectionString": "https://api.devnet.solana.com",
            "PrivateKey": "",
            "PublicKey": ""
        },
        "CargoOASIS": {
            "ConnectionString": "",
            "SingingMessage": "",
            "PrivateKey": "",
            "HostUrl": ""
        },
        "AzureCosmosDBOASIS": {
            "ServiceEndpoint": "",
            "AuthKey": "",
            "DBName": "",
            "CollectionNames": "avatars, avatarDetails, holons"
        },
        "LocalFileOASIS": {
            "FilePath": "wallets.json" //TEMP FOR TESTING - NEVER USE LOCAL ON LIVE SERVER!
        },
        "ArbitrumOASIS": {
            "ConnectionString": "https://sepolia-rollup.arbitrum.io/rpc",
            "ChainPrivateKey": "",
            "ChainId": "421614",
            "ContractAddress": ""
        },
        "PolygonOASIS": {
            "ConnectionString": "https://rpc-amoy.polygon.technology/",
            "ChainId": 137, // Also can be 80001
            "ChainPrivateKey": "",
            "ContractAddress": "" 
        },
        "RootStockOASIS": {
            "ConnectionString": "https://public-node.testnet.rsk.co",
            "ChainId": 31,
            "ChainPrivateKey": "",
            "ContractAddress": ""
        },
        "PinataOASIS": {
            "ConnectionString": ""
        }
    }
  }
}